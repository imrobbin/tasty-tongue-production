rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
  
    function isLoggedIn() {
      return request.auth != null
    }
    
    function isAdmin() {
    	return isLoggedIn() && 
    					get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }

    match /users/{uid} {
    	// allow read, write;
      allow read: if isLoggedIn();
      allow write: if isLoggedIn() && request.auth.uid == uid;
    }
        
    match /products/{id} {    	
    	allow read: if isLoggedIn();
      allow write: if isAdmin();
    }
    
    match /carts/{uid} {    	
    	allow read: if isLoggedIn();
      allow write: if isLoggedIn() && request.auth.uid == uid;
    }
    
    match /orders/{id} {
    	// anyone can access the oreders 
    	allow read: if isLoggedIn();
    }
    
     match /orders/{id} {
     	// only user can create their order
      allow create: if isLoggedIn() && request.auth.uid == request.resource.data.orderedBy.owner;
      // only admin can update it's status
      allow update: if isAdmin() || request.auth.uid == get(/databases/$(database)/documents/orders/$(id)).data.orderedBy.owner;
    }
    
    match /addresses/{uid} {
    	allow read: if isLoggedIn();
      allow write: if isLoggedIn() && request.auth.uid == uid;
    }  
    
    match /deviceTokens/{id} {
    	allow read: if isLoggedIn();
      allow write: if isLoggedIn();
    }
  }
}